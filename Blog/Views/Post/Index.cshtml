@model PagedList.IPagedList<Blog.Models.Post>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create",null, new { @class = "btn btn-primary" })
</p>

<table class="table">
    <tr>
        <th>#</th>
        <th>
            Category
        </th>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm})
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Description)
        </th>
        <th>
            @Html.ActionLink("Creation Date", "Index", new { sortOrder = ViewBag.DateSortParm })
        <th>
            @Html.DisplayNameFor(model => model.First().Tags)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
           
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @item.Description.Substring(0, Math.Min(item.Description.Length, 55))...
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreationDate)
        </td>
        <td>
            @{
            foreach (var tag in item.Tags)
            {
                <span class="label label-default">@tag.Name</span>
            }
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.PostID }, new { @class = "btn btn-warning" }) 
            @Html.ActionLink("Read More", "Details", new { id=item.PostID }, new { @class = "btn btn-info" }) 
            @Html.ActionLink("Delete", "Delete", new { id=item.PostID }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))